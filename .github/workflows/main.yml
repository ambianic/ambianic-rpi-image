# This workflow builds, tests and releases an Ambianic Edge binary image for Raspberry Pi

name: CI build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build binary images
  build:
    name: Build and test a new Ambianic Edge RPI image
    runs-on: ubuntu-latest
    # Skip build if the commit message includes the string '[skip ci]'
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Get the version (git tag)
        id: get_version
        run: |
          echo ${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Install pi-gen required dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update --fix-missing
          # sudo apt-get install coreutils quilt parted qemu-user-static debootstrap zerofree zip
          # sudo apt-get install dosfstools bsdtar libcap2-bin grep rsync xz-utils file git curl bc
          sudo apt-get install -y coreutils quilt parted debootstrap zerofree zip dosfstools bsdtar libcap2-bin grep rsync xz-utils file git curl bc jq
          sudo apt-get install -y qemu-user-static:i386
      # Checkout the latest pi-gen repo code
      - name: Checkout the latest pi-gen repo code
        run: |
          git clone https://github.com/RPi-Distro/pi-gen.git
          pushd pi-gen
          pwd
          ls -al          
          popd

      # Copy ambianic image build config to pi-gen working dir
      - name: Copy ambianic image build config to pi-gen working dir
        run: cp ./config ./pi-gen/config

      # Copy WiFi Connect stage script to pi-gen working dir
      - name: Copy WiFi Connect stage script to pi-gen working dir
        run: |
          find ./pi-gen-stage-ambianic -name "*.sh" -exec chmod +x {} \;
          cp -R ./pi-gen-stage-ambianic ./pi-gen/
          ls -al ./pi-gen
          
      # Mark stage2 image to be skipped for faster build
      - name: Skip stage2 image - Standard Raspbian OS Lite
        run: |
          touch ./pi-gen/stage2/SKIP_IMAGES

      # Run pi-gen image build script
      - name: Run pi-gen script
        run: |
          pwd
          ls -al          
          pushd pi-gen
          pwd
          ls -al
          sudo CLEAN=1 BUILD_VERSION=${{ steps.get_version.outputs.VERSION }} ./build.sh -c config
          popd

      - name: Check prepared images
        run: |
          ls -al ./pi-gen/deploy
          # check if the expected image files are there
          test -f ./pi-gen/deploy/*ambianic_edge-rpi.zip

      - name: Calculate Checksum
        id: get_sha256_checksum
        run: |
          export IMAGE_SHA256_CHECKSUM=$(shasum -a 256 deploy/image_ambianic_edge-rpi.zip | awk '{print $1}')
          echo "$IMAGE_SHA256_CHECKSUM deploy/image_ambianic_edge-rpi.zip"
          echo ::set-output name=IMAGE_SHA256_CHECKSUM::${IMAGE_SHA256_CHECKSUM}
      - name: Upload artifacts for release job
        uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: |
            ./pi-gen/deploy

  release:
    name: Release a new Ambianic Edge RPI image on master push event
    needs: build
    runs-on: ubuntu-latest
    # trigger a release only when there is a direct commit or PR merge on the master branch
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Download deploy artifacts from build job
        uses: actions/download-artifact@v2
        with:
          name: deploy
      - name: List deployment artifacts
        run: |
          pwd
          ls -al
          ls -al ./deploy/
          ls -al ./pi-gen/
          ls -al ./pi-gen/deploy/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Click the link below to start your download:
            <span align="center">
            ### [ambianic_edge_rpi-${{ steps.get_version.outputs.VERSION }}.zip](https://github.com/ambianic/ambianic-rpi-image/releases/download/${{ steps.get_version.outputs.VERSION }}/ambianic_edge_rpi-${{ steps.get_version.outputs.VERSION }}.zip)
            <sup>[Quick Start Guide](https://docs.ambianic.ai/users/quickstart/)</sup>
            </span>
            ---
            * **SHA-256:** ${{ steps.get_sha256_checksum.outputs.IMAGE_SHA256_CHECKSUM }}
            * **Base Image:**
            * **Kernel version:**
          draft: false
          prerelease: true
      - name: Upload Image
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pi-gen/deploy/image_ambianic_edge-rpi.zip
          asset_name: ambianic_edge_rpi-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: Finalizing run
        run: |
          echo Finishing pi-gen script...
          echo Ambianic Edge rpi image build finished successfully!
  
